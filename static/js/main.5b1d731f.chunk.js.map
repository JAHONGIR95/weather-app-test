{"version":3,"sources":["redux/slices/weatherSlices.js","redux/store/store.js","assets/images/balloon.png","components/InputBar.js","components/RightInfo.js","assets/images/lightrain.jpg","assets/images/clearsky2.jpg","assets/images/mist.jpg","assets/images/snow.jpg","assets/images/thanderstorm.jpg","assets/images/newcloud.jpg","assets/images/newcloud2.jpg","components/Wallpaper.js","container/Left.js","components/Cities.js","components/WeatherInfo.js","container/Right.js","container/MainContainer.js","App.js","index.js"],"names":["fetchWeatherAction","createAsyncThunk","a","payload","rejectWithValue","getState","dispatch","axios","get","process","data","response","weatherSlice","createSlice","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","weather","error","undefined","rejected","store","configureStore","reducer","weatherReducer","InputBar","useState","city","setCity","useDispatch","inputEl","useRef","useEffect","className","onSubmit","e","preventDefault","inputData","current","value","type","ref","placeholder","class","LeftInfo","now","Date","time","toLocaleTimeString","date","toDateString","useSelector","degree","Math","ceil","main","temp","desc","icon","src","alt","wallpaper","theme","clearsky2","newcloud","newcloud2","lightrain","thanderstorm","mist","snow","Left","description","style","background","backgroundImage","display","flexDirection","justifyContent","balloon","Cities","onClick","WeatherInfo","clouds","all","humidity","wind","speed","rain","Right","MainContainer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b1d731f.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// action\nexport const fetchWeatherAction = createAsyncThunk(\n    'weather/fetch',\n    async (payload = 'tashkent', {rejectWithValue, getState, dispatch}) => {\n        try {\n            const { data } = await axios.get(`http://api.openweathermap.org/data/2.5/weather?units=metric&q=${payload}&appid=${process.env.REACT_APP_OPEN_WEATHER_KEY}`)\n            return data;\n        } catch (error) {\n            if(!error?.response){\n                throw error\n            }\n            return rejectWithValue(error?.response?.data)\n        }\n    }\n)\n\n// slices\n\nconst weatherSlice = createSlice({\n    name: 'weather',\n    initialState: {},\n    extraReducers: (builder) => {\n        // pending\n        builder.addCase(fetchWeatherAction.pending, (state, action) => {\n            state.loading = true\n        })\n        // fulfilled\n        builder.addCase(fetchWeatherAction.fulfilled, (state, action) => {\n            state.weather = action && action.payload;\n            state.loading = false;\n            state.error = undefined;\n        })\n        // rejected\n        builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n            state.loading = false;\n            state.weather = undefined;\n            state.error = action?.payload;\n        })\n    }\n})\n\nexport default weatherSlice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\nimport weatherReducer from '../slices/weatherSlices' \n\nconst store = configureStore({\n    reducer: weatherReducer,\n})\n\nexport default store;","export default __webpack_public_path__ + \"static/media/balloon.270be753.png\";","import React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { fetchWeatherAction } from '../redux/slices/weatherSlices'\nexport const InputBar = () => {\n    const [city, setCity] = useState('')\n    const dispatch = useDispatch()\n    const inputEl = useRef(null)\n    \n    useEffect(() => {\n        dispatch(fetchWeatherAction(city))     \n    }, [city])\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        const inputData = inputEl.current.value;\n        if(inputData === '') return\n        setCity(inputData)\n        inputEl.current.value = ''\n    }\n    \n    return (\n        <div className=\"input-bar\">\n            <form onSubmit={submitHandler} className=\"form\">\n                <input type=\"text\" ref={inputEl} className=\"form-input\" placeholder=\"Another location\" />\n                <button type=\"submit\" className=\"search-button\"><i class='bx bx-search'></i></button>\n            </form>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchWeatherAction } from '../redux/slices/weatherSlices'\n\n\nexport const LeftInfo = () => {\n    // current time function\n    let now = new Date()\n    let time = now.toLocaleTimeString()\n    let date = now.toDateString()\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n       dispatch(fetchWeatherAction('tashkent'))     \n    }, [])\n\n    const imgUrl = 'http://openweathermap.org/img/wn/'\n\n    const state = useSelector(state => state.weather)\n    const degree = state && Math.ceil(state.main.temp)\n    const city = state && state.name\n    const desc =  state && state.weather[0].main\n    const icon = state && state.weather[0].icon\n\n    return (\n        <div className=\"right-info\">\n            <div className=\"info-top\">\n                <h1 className=\"degree\">{degree}<sup>o</sup></h1>\n                <div className=\"info-mid\">\n                    <h2 className=\"city-name\">{city}</h2>\n                    <span className=\"day-time\">\n                        {time}, {date}\n                    </span>\n                </div>\n            </div>\n            <div className=\"info-desc\">\n                <img className=\"desc-icon\" src={`${imgUrl}${icon}@2x.png`} alt={desc} />\n                <p className=\"desc\">{desc}</p>\n            </div>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/lightrain.6223d1c8.jpg\";","export default __webpack_public_path__ + \"static/media/clearsky2.7ef79022.jpg\";","export default __webpack_public_path__ + \"static/media/mist.6dd20b34.jpg\";","export default __webpack_public_path__ + \"static/media/snow.6925ef6f.jpg\";","export default __webpack_public_path__ + \"static/media/thanderstorm.abc4d94c.jpg\";","export default __webpack_public_path__ + \"static/media/newcloud.eb307386.jpg\";","export default __webpack_public_path__ + \"static/media/newcloud2.77012c14.jpg\";","import lightrain from \"../assets/images/lightrain.jpg\"\nimport clearsky2 from \"../assets/images/clearsky2.jpg\"\nimport mist from \"../assets/images/mist.jpg\"\nimport snow from \"../assets/images/snow.jpg\"\nimport thanderstorm from \"../assets/images/thanderstorm.jpg\"\nimport newcloud from \"../assets/images/newcloud.jpg\"\nimport newcloud2 from \"../assets/images/newcloud2.jpg\"\n\nconst wallpaper = (theme) => {\n  switch (theme) {\n    case \"clear sky\":\n      return clearsky2\n    case \"few clouds\":\n      return newcloud;\n    case \"scattered clouds\":\n      return newcloud;\n    case \"broken clouds\":\n      return newcloud2;\n    case \"overcast clouds\":\n    return newcloud2;\n    case \"shower rain\":\n      return lightrain;\n    case \"rain\":\n      return lightrain;\n    case \"thanderstorm\":\n      return thanderstorm\n    case \"mist\":\n      return mist;\n    case \"snow\":\n        return snow;\n    default:\n      return newcloud2;\n  }\n}\n\nexport default wallpaper\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport balloon from '../assets/images/balloon.png'\nimport { InputBar } from '../components/InputBar'\nimport { LeftInfo } from '../components/RightInfo'\nimport wallpaper from '../components/Wallpaper'\nimport { fetchWeatherAction } from '../redux/slices/weatherSlices'\n\n\nexport const Left = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(fetchWeatherAction())     \n    }, [])\n\n    const state = useSelector(state => state.weather)\n    const desc = state && state.weather[0].description\n    return (\n        <div className=\"left\" style={ desc === 'clear sky' ? { background: 'rgb(34,110,200)',\n            background: 'linear-gradient(180deg, rgba(34,110,200,1) 0%, rgba(102,157,196,0.8421743697478992) 76%, rgba(0,212,255,1) 100%)'} : { backgroundImage:`url(${wallpaper(desc)})`, display: 'flex', flexDirection: 'column', justifyContent: 'space-between'}}>\n            <p className=\"left-title\">the.weather</p>\n            <div className=\"mobile-top\"><InputBar /></div>\n            <div className=\"img-wrapper\">\n                <img className=\"image\" src={desc === 'clear sky' && balloon} alt=\"\" />\n            </div>\n            <LeftInfo />\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { fetchWeatherAction } from '../redux/slices/weatherSlices'\n\nexport const Cities = () => {\n    const dispatch = useDispatch()\n    return (\n        <section className=\"cities\">\n            <p onClick={() => dispatch(fetchWeatherAction('tashkent'))} className=\"single-city\">Tashkent</p>\n            <p onClick={() => dispatch(fetchWeatherAction('samarkand'))} className=\"single-city\">Samarkand</p>\n            <p onClick={() => dispatch(fetchWeatherAction('urgench'))} className=\"single-city\">Urgench</p>\n            <p onClick={() => dispatch(fetchWeatherAction('bukhara'))} className=\"single-city\">Bukhara</p>\n        </section>\n    )\n}\n","import React, {useEffect} from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { fetchWeatherAction } from '../redux/slices/weatherSlices'\n\nexport const WeatherInfo = () => {\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(fetchWeatherAction())\n    }, [])\n\n    const state = useSelector(state => state.weather)\n    const clouds = state && state.clouds.all\n    const humidity = state && state.main.humidity\n    const wind = state && state.wind.speed\n    const rain = state && state.rain\n    \n    return (\n        <section className=\"weather-details\">\n            <h2 className=\"weather-title\">Weather Details</h2>\n            <div className=\"details\">\n                <p className=\"detail-title\">Cloudy</p>\n                <p className=\"detail-info\">{`${clouds}%`}</p>\n            </div>\n            <div className=\"details\">\n                <p className=\"detail-title\">Humidity</p>\n                <p className=\"detail-info\">{`${humidity}%`}</p>\n            </div>\n            <div className=\"details\">\n                <p className=\"detail-title\">Wind</p>\n                <p className=\"detail-info\">{`${wind}m/s`}</p>\n            </div>\n            <div className=\"details\">\n                <p className=\"detail-title\">Rain</p>\n                <p className=\"detail-info\">{`${rain ? rain['1h'] : '0'}mm`}</p>\n            </div>\n            \n        </section>\n    )\n}\n","import React from 'react'\nimport { Cities } from '../components/Cities'\nimport { InputBar } from '../components/InputBar'\nimport { WeatherInfo } from '../components/WeatherInfo'\n\nexport const Right = () => {\n    return (\n        <div className=\"right\">\n            <div className=\"mobile-heddin-bar\">\n                <InputBar />\n            </div>\n            <Cities />\n            <WeatherInfo />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Left } from './Left'\nimport { Right } from './Right'\n\nexport const MainContainer = () => {\n    return (\n        <div className=\"main-container\">\n            <Left />\n            <Right />\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { fetchWeatherAction } from './redux/slices/weatherSlices'\nimport './assets/styles/app.css'\nimport { MainContainer } from './container/MainContainer'\n\n\nfunction App() {\n    const dispatch = useDispatch()\n    useEffect(() => {\n       dispatch(fetchWeatherAction())\n    }, [])\n\n    return (\n        <div className=\"app\">\n            <div className=\"container\"> \n                <MainContainer />\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}